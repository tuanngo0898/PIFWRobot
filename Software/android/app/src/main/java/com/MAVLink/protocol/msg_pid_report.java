/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE PID_REPORT PACKING
package com.MAVLink.protocol;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
* Report pid internal parameter
*/
public class msg_pid_report extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_PID_REPORT = 16;
    public static final int MAVLINK_MSG_LENGTH = 25;
    private static final long serialVersionUID = MAVLINK_MSG_ID_PID_REPORT;


      
    /**
    * Set point
    */
    public float sp;
      
    /**
    * Feed back
    */
    public float fb;
      
    /**
    * P part
    */
    public float P_Part;
      
    /**
    * I part
    */
    public float I_Part;
      
    /**
    * D part
    */
    public float D_Part;
      
    /**
    * Output
    */
    public float U;
      
    /**
    * Object that PID control
    */
    public short pid_control;
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_PID_REPORT;
              
        packet.payload.putFloat(sp);
              
        packet.payload.putFloat(fb);
              
        packet.payload.putFloat(P_Part);
              
        packet.payload.putFloat(I_Part);
              
        packet.payload.putFloat(D_Part);
              
        packet.payload.putFloat(U);
              
        packet.payload.putUnsignedByte(pid_control);
        
        return packet;
    }

    /**
    * Decode a pid_report message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.sp = payload.getFloat();
              
        this.fb = payload.getFloat();
              
        this.P_Part = payload.getFloat();
              
        this.I_Part = payload.getFloat();
              
        this.D_Part = payload.getFloat();
              
        this.U = payload.getFloat();
              
        this.pid_control = payload.getUnsignedByte();
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_pid_report(){
        msgid = MAVLINK_MSG_ID_PID_REPORT;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_pid_report(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_PID_REPORT;
        unpack(mavLinkPacket.payload);        
    }

                  
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_PID_REPORT - sysid:"+sysid+" compid:"+compid+" sp:"+sp+" fb:"+fb+" P_Part:"+P_Part+" I_Part:"+I_Part+" D_Part:"+D_Part+" U:"+U+" pid_control:"+pid_control+"";
    }
}
        