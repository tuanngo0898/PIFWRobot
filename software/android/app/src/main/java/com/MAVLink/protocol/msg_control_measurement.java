/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE CONTROL_MEASUREMENT PACKING
package com.MAVLink.protocol;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
 * Control and measurement message
 */
public class msg_control_measurement extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_CONTROL_MEASUREMENT = 28;
    public static final int MAVLINK_MSG_LENGTH = 28;
    private static final long serialVersionUID = MAVLINK_MSG_ID_CONTROL_MEASUREMENT;

      
    /**
     * 
     */
    public int left;
      
    /**
     * 
     */
    public int right;
      
    /**
     * 
     */
    public float x;
      
    /**
     * 
     */
    public float y;
      
    /**
     * 
     */
    public float z;
      
    /**
     * 
     */
    public float r;
      
    /**
     * 
     */
    public float yaw;
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_CONTROL_MEASUREMENT;
        
        packet.payload.putInt(left);
        packet.payload.putInt(right);
        packet.payload.putFloat(x);
        packet.payload.putFloat(y);
        packet.payload.putFloat(z);
        packet.payload.putFloat(r);
        packet.payload.putFloat(yaw);
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a control_measurement message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
        
        this.left = payload.getInt();
        this.right = payload.getInt();
        this.x = payload.getFloat();
        this.y = payload.getFloat();
        this.z = payload.getFloat();
        this.r = payload.getFloat();
        this.yaw = payload.getFloat();
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_control_measurement() {
        this.msgid = MAVLINK_MSG_ID_CONTROL_MEASUREMENT;
    }
    
    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_control_measurement( int left, int right, float x, float y, float z, float r, float yaw) {
        this.msgid = MAVLINK_MSG_ID_CONTROL_MEASUREMENT;

        this.left = left;
        this.right = right;
        this.x = x;
        this.y = y;
        this.z = z;
        this.r = r;
        this.yaw = yaw;
        
    }
    
    /**
     * Constructor for a new message, initializes everything
     */
    public msg_control_measurement( int left, int right, float x, float y, float z, float r, float yaw, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_CONTROL_MEASUREMENT;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.left = left;
        this.right = right;
        this.x = x;
        this.y = y;
        this.z = z;
        this.r = r;
        this.yaw = yaw;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_control_measurement(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_CONTROL_MEASUREMENT;
        
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

                  
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_CONTROL_MEASUREMENT - sysid:"+sysid+" compid:"+compid+" left:"+left+" right:"+right+" x:"+x+" y:"+y+" z:"+z+" r:"+r+" yaw:"+yaw+"";
    }
    
    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_CONTROL_MEASUREMENT";
    }
}
        